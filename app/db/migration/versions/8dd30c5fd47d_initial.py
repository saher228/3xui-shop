"""initial

Revision ID: 8dd30c5fd47d
Revises: 
Create Date: 2025-01-24 21:10:36.554531

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "8dd30c5fd47d"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "servers",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("host", sa.String(length=255), nullable=False),
        sa.Column("subscription", sa.String(length=255), nullable=False),
        sa.Column("max_clients", sa.Integer(), nullable=False),
        sa.Column("current_clients", sa.Integer(), nullable=False),
        sa.Column("location", sa.String(length=32), nullable=True),
        sa.Column("online", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_servers")),
        sa.UniqueConstraint("name", name=op.f("uq_servers_name")),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("tg_id", sa.Integer(), nullable=False),
        sa.Column("vpn_id", sa.String(length=36), nullable=False),
        sa.Column("server_id", sa.Integer(), nullable=True),
        sa.Column("first_name", sa.String(length=32), nullable=False),
        sa.Column("username", sa.String(length=32), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["server_id"],
            ["servers.id"],
            name=op.f("fk_users_server_id_servers"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("tg_id", name=op.f("uq_users_tg_id")),
        sa.UniqueConstraint("vpn_id", name=op.f("uq_users_vpn_id")),
    )
    op.create_table(
        "promocodes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(length=8), nullable=False),
        sa.Column("duration", sa.Integer(), nullable=False),
        sa.Column("is_activated", sa.Boolean(), nullable=False),
        sa.Column("activated_by", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["activated_by"],
            ["users.tg_id"],
            name=op.f(
                "fk_promocodes_activated_by_users",
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_promocodes")),
        sa.UniqueConstraint("code", name=op.f("uq_promocodes_code")),
    )
    op.create_table(
        "transactions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("tg_id", sa.Integer(), nullable=False),
        sa.Column("payment_id", sa.String(length=64), nullable=False),
        sa.Column("subscription", sa.String(length=255), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "pending",
                "completed",
                "failed",
                "refunded",
                name="transactionstatus",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tg_id"],
            ["users.tg_id"],
            name=op.f(
                "fk_transactions_tg_id_users",
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_transactions")),
        sa.UniqueConstraint(
            "payment_id",
            name=op.f("uq_transactions_payment_id"),
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("transactions")
    op.drop_table("promocodes")
    op.drop_table("users")
    op.drop_table("servers")
    # ### end Alembic commands ###
